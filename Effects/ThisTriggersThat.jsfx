version: 1.6
desc: ThisTriggersThat
author: Rockumk
about:
  # One Channel can be used to rhythmically trigger the articulation of another channels
changelog:
  - Namechange


slider1:1<1,16,1>Pitch Content MIDI Channel
slider2:10<1,16,1>Trigger MIDI Channel
slider3:0<0,16,1{No - Off,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>Pass Pitch Content
slider4:0<0,1,1{No,Yes}>Include Non-Note Data from Pitch Channel
slider5:0<0,16,1{No - Off,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>Pass Trigger Notes
slider6:<0,1,1{No,Yes}>Include Non-Note Data from Trigger Channel
slider7:-1<-1,16,1{No - Off,Yes - Unchanged,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}>Pass Other MIDI
slider8:1<0,1,1{Content,Trigger}>Velocity Source (Content or Trigger)
slider9:1<0,1,1{Strikes Only, Gating}>Trigger Operating Mode (Strikes Only, Gating)
slider10:0<0,5,1{Off,Quarter,Eighth,Sixteenth,Thirty-Second}>-Delay to Quantize
slider11:1<1,1000,1> -1
slider12:1<1,1000,1> -2
slider13:1<1,1000,1> -3
slider14:1<1,1000,1> -4
slider15:1<1,1000,1> -5
slider16:1<1,1000,1> -6
slider17:1<1,1000,1> -7
slider18:1<1,1000,1> -8
slider19:1<1,1000,1> -9
slider20:1<1,1000,1> -0


@init 
  NOTE_ON = 0x90;  
  NOTE_OFF = 0x80;
  triggerON = 0;
  iCount = 0;
  
  
  idx = 0;
  loop(3000,
    note_space[idx] =-1;
    idx += 1;
  );
  
@block
    slider17 = iCount;
    pitchChannel = slider1 - 1;


zero = 0; // I variable to basically mark doing nothing


function storeNote(theNote, theVelocity)(
icount += 1;
note_space[icount +1000] = theNote;
note_space[icount +2000] = theVelocity;
slider15= theNote;
slider16 = theVelocity;


);

function unstoreNote(theNote)(
shiftCount = 1;
foundNoteToRemove = -1;
while (shiftCount <= iCount) (
theNote == note_space[shiftCount +1000] ? foundNoteToRemove = shiftCount : zero = 0;
shiftCount += 1;
);
shiftCount = foundNoteToRemove;
while (shiftCount <= iCount) (
note_space[shiftCount +1000] = note_space[shiftCount + 1 + 1000];
note_space[shiftCount +2000] = note_space[shiftCount + 1 + 2000];
);
iCount > 0 ? iCount -= 1;
slider15= theNote;
slider16 = 0;
);

function playStored()(
idx = 1;
while (idx < iCount + 1) (
midisend(0, NOTE_ON | pitchChannel, note_space[idx + 1000], note_space[idx + 2000]);
idx += 1;
);
);

function playAndClearStore()(
idx = 1;
while (idx < iCount + 1) (
midisend(0, NOTE_ON | pitchChannel, note_space[idx + 1000], note_space[idx + 2000]);
note_space[idx + 1000] = -1;
note_space[idx + 2000] = -1;
idx += 1;
);
);

function sendOffAndClear()(
idx = 1;
while (idx < iCount + 1) (
midisend(0, NOTE_OFF | pitchChannel, note_space[idx + 1000], 0);
midisend(0, NOTE_ON | pitchChannel, note_space[idx + 1000], 0);
note_space[idx + 1000] = -1;
note_space[idx + 2000] = -1;
idx += 1;
);
);

function sendOffStored()(
idx = 1;
while (idx < iCount + 1) (
midisend(0, NOTE_OFF | pitchChannel, note_space[idx + 1000], 0);
midisend(0, NOTE_ON | pitchChannel, note_space[idx + 1000], 0);
idx += 1;
);
);


  while (midirecv(offset, msg1, msg2, msg3)) (
    gateOpen = slider9;
    status = msg1 & 0xF0;
    channel = msg1 & 0x0F;
    note = msg2;
    velocity = msg3;
    MaybeTriggerMaybeOther = 0;
    MaybeOther = 0;
    Sent = 0;
    pitchChannel = slider1 - 1;
    triggerChannel = slider2 - 1;
    passThroughPitchChannel = slider3 - 1;
    passThroughTriggerChannel = slider5 - 1;
    passThroughOtherChannel = slider7 - 2;






// PITCH CONTENT PROCESSS --------------------------------------------------------------------------------------

      // IF NOTE-ON on PITCH CONTENT
    (triggerON == 1 && channel == pitchChannel && (status == NOTE_ON && velocity != 0) && gateOpen == 1) ? 
           (slider11 = 11; midisend(0, status | pitchChannel, note, velocity); storeNote(note,velocity);) 
           : zero=0;
    (triggerON == 1 && channel == pitchChannel && (status == NOTE_ON && velocity != 0) && gateOpen == 0) ? 
           (slider11 = 13; storeNote(note,velocity);) 
           : zero=0;
    (triggerON == 0 && channel == pitchChannel && (status == NOTE_ON && velocity != 0)) ? 
           (slider11 = 14; storeNote(note,velocity);) 
           : zero=0;

      // IF NOTE-OFF on PITCH CONTENT
    (channel == pitchChannel && ((status == NOTE_ON && velocity == 0) || status == NOTE_OFF)) ? 
           (slider12 = 21; unstoreNote(note); midisend(0, NOTE_ON | pitchChannel, note, 0); ) 
           : slider12 = 1; ;



    
      // IF NOTE-ON on PITCH CHANNEL PASS IT THROUGH TO passThroughPitchChannel CHANNEL
    (passThroughPitchChannel != -1 && channel == pitchChannel && (status == NOTE_ON && velocity != 0)) ? (
      sent = 1; midisend(0, status | passThroughPitchChannel, msg2, msg3)) :  MaybeTriggerMaybeOther = 1;
      // IF NOTE-OFF on PITCH CHANNEL PASS IT THROUGH TO passThroughPitchChannel CHANNEL
    (passThroughPitchChannel != -1 && channel == pitchChannel && ((status == NOTE_ON && velocity == 0) || status == NOTE_OFF)) ? (
      sent = 1; midisend(0, status | passThroughPitchChannel, msg2, msg3)) :  MaybeTriggerMaybeOther = 1;
      // IF Non-Note on PITCH CHANNEL PASS IT THROUGH TO passThroughPitchChannel CHANNEL
    (sent == 0 && passThroughPitchChannel != -1 && channel == pitchChannel && slider4 == 1) ? (
      sent = 1; midisend(0, status | passThroughPitchChannel, msg2, msg3)) : MaybeTriggerMaybeOther = 1;


// TRIGGER PROCESS --------------------------------------------------------------------------------------
      // IF NOTE-ON on PITCH CHANNEL PASS IT THROUGH TO passThroughTriggerChannel CHANNEL
    (channel == triggerChannel && (status == NOTE_ON && velocity > 0)) ? 
          (slider13 = 31; triggerON = 1; playStored(); triggerON = 1;) 
          : slider13 = 1; ;
      // IF NOTE-OFF on PITCH CHANNEL PASS IT THROUGH TO passThroughPitchChannel CHANNEL
    (channel == triggerChannel && ((status == NOTE_ON && velocity == 0) || status == NOTE_OFF)) ? 
          (slider14 = 41; sendOffStored(); triggerON = 0;) : slider14 = 42;





      // IF NOTE-ON on PITCH CHANNEL PASS IT THROUGH TO passThroughTriggerChannel CHANNEL
    (MaybeTriggerMaybeOther == 1 && passThroughTriggerChannel != -1 && channel == triggerChannel && (status == NOTE_ON && velocity != 0)) ? (
     gateOpen = 1; sent = 1; midisend(0, status | passThroughTriggerChannel, msg2, msg3)) :  MaybeOther = 1;
      // IF NOTE-OFF on PITCH CHANNEL PASS IT THROUGH TO passThroughPitchChannel CHANNEL
    (MaybeTriggerMaybeOther == 1 && passThroughTriggerChannel != -1 && channel == triggerChannel && ((status == NOTE_ON && velocity == 0) || status == NOTE_OFF)) ? (
     gateOpen = 0; sent = 1; midisend(0, status | passThroughTriggerChannel, msg2, msg3)) :  MaybeOther = 1;
      
    (sent == 0 && MaybeTriggerMaybeOther == 1 && passThroughTriggerChannel != -1 && channel == triggerChannel && slider6 == 1) ? (
      sent = 1; midisend(0, status | passThroughTriggerChannel, msg2, msg3)) : MaybeOther = 1;    
      
// OTHER MIDI PROCESS --------------------------------------------------------------------------------------
      
      // IF PASS OTHER ON, PASS ALL OUT passThroughOtherChannel CHANNEL
      
    (passThroughPitchChannel == -1) ?  MaybeOther = 1;
    (passThroughTriggerChannel == -1) ?  MaybeOther = 1;   
    (status != NOTE_ON && status != NOTE_OFF) ?  MaybeOther = 1;
    ((sent == 0 && MaybeOther == 1 && passThroughOtherChannel == -1 )) ? (
      midisend(offset, status | channel, msg2, msg3));
    ((sent == 0 && MaybeOther == 1 && passThroughOtherChannel > -1 )) ? (
      midisend(offset, status | passThroughOtherChannel, msg2, msg3));
      // midisend(offset, status | passThroughOtherChannel, msg2, msg3);
      

      
      
      
      
      

    
    );
